تأكد من توفر جميع متطلبات تشغيل Flask و Flask-SQLAlchemy قبل البدء. قد تكون عليك تثبيت الحزم اللازمة على الخادم قبل تشغيل تطبيقك. تابع الخطوات التالية لاستضافة موقعك المصمم بـ Flask و Flask-SQLAlchemy على Hostinger:

1. **إعداد حساب Hostinger والتحقق من المتطلبات**:
   قم بإعداد حساب على Hostinger واختر الخطة المناسبة. تأكد من أن خطة الاستضافة المختارة تدعم Python واتصل بدعم Hostinger إذا لزم الأمر.

2. **رفع ملفات المشروع**:
   قم برفع ملفات مشروع Flask الخاص بك إلى مجلد الاستضافة على سيرفر Hostinger باستخدام FTP أو لوحة التحكم المدمجة.
   
3. **إعداد ملف التشغيل الافتراضي "wsgi"**:
   قم بإنشاء ملف `wsgi.py` في مجلد المشروع الخاص بك وقم بتضمين الكود التالي:

   ```python
   from myapp import app

   if __name__ == "__main__":
       app.run()
   ```
   استبدل `myapp` باسم ملف Flask الخاص بك.

4. **إعداد متطلبات المشروع**:
   قم بإنشاء ملف `requirements.txt` في مجلد المشروع وقم بتسجيل جميع الحزم المطلوبة مع إصداراتها مثل:

   ```
   Flask==1.1.2
   Flask-SQLAlchemy==2.4.4
   ...
   ```

5. **تثبيت الحزم اللازمة**:
   قم بتسجيل الدخول إلى سيرفر Hostinger عبر SSH وانتقل إلى مجلد المشروع. قم بتثبيت الحزم المطلوبة باستخدام الأمر التالي:

   ```
   pip install -r requirements.txt
   ```

6. **إعداد قاعدة البيانات**:
   إذا كنت تستخدم قاعدة بيانات مثل MySQL أو PostgreSQL، تأكد من إعداد قاعدة البيانات والمستخدم وكلمة المرور وتحديث ملف التكوين الخاص بـ Flask-SQLAlchemy في المشروع.

7. **تكوين الخادم**:
   قد تحتاج إلى تكوين ملف `.htaccess` لإعادة توجيه طلبات الويب إلى تطبيق Flask الخاص بك. قم بإنشاء ملف `.htaccess` في مجلد المشروع وأضف الكود التالي:

   ```
   RewriteEngine on
   RewriteCond %{REQUEST_FILENAME} !-f
   RewriteCond %{REQUEST_FILENAME} !-d
   RewriteRule ^(.*)$ /path/to/your/wsgi.py/$1 [L]
   ```
   استبدل `/path/to/your/wsgi.py` بمسار الملف `wsgi.py` الخاص بك.

8. **تشغيل تطبيق Flask**:
   قد تحتاج إلى تشغيل تطبيق Flask باستخدام مثبت WSGI متوافق مثل Gunicorn أو uWSGI. قم بتشغيل تطبيقك باستخدام الأمر الت